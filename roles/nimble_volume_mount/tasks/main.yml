---
- name: Ensure nimble_volume and nimble_volume_mountpoint
  fail: msg="Missing variable nimble_volume and nimble_volume_mountpoint, please provide a volume name in nimble_volume and current mountpoint in nimble_volume_mountpoint"
  when: nimble_volume is not defined and nimble_volume_mountpoint is not defined

- name: Host facts
  include_role:
    name: nimble_host_facts
  when: nimble_host_facts is undefined

- name: Refresh group facts
  include_role:
    name: nimble_group_facts
  vars:
    nimble_group_facts:
      volumes:
      subnets:

- name: Discover Targets
  open_iscsi: 
    show_nodes: yes
    discover: yes
    portal: "{{ nimble_group_discovery_ip }}"

- name: Discover LUN
  open_iscsi:
    auto_node_startup: True
    discover: True
    login: True
    portal: "{{ nimble_group_discovery_ip }}"
    target: "{{ nimble_group_facts | json_query(local_query) }}"
  vars:
    local_query: "volumes[?name=='{{ nimble_volume }}'].target_name | [0]"

- name: Get volume serial number
  set_fact:
    nimble_volume_serial_number: "{{ nimble_group_facts | json_query(local_query) }}"
  vars:
    local_query: "volumes[?name=='{{ nimble_volume }}'].serial_number | [0]"

- name: Create filesystem
  filesystem: 
    dev: "{{ nimble_host_device_prefix }}{{ nimble_volume_serial_number }}"
    fstype: xfs
    opts: "-L {{ nimble_volume }}"
  register: nimble_filesystem_created

- name: Update label if this is an existing filesystem (clone)
  shell: xfs_admin -L {{ nimble_volume }} -U $(uuidgen) {{ nimble_host_device_prefix }}{{ nimble_volume_serial_number }}
  when: nimble_filesystem_created.changed == False

- name: Mount volume
  mount:
    name: "{{ nimble_volume_mountpoint }}"
    state: mounted
    src: LABEL={{ nimble_volume }}
    fstype: xfs
