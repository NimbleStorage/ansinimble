---
- name: Ensure nimble_volume and nimble_volume_mountpoint
  fail: msg="Missing variable nimble_volume and nimble_volume_mountpoint, please provide a volume name in nimble_volume and current mountpoint in nimble_volume_mountpoint"
  when: nimble_volume is undefined and nimble_volume_mountpoint is undefined

- name: Host facts
  include_role:
    name: nimble_host_facts
  when: nimble_host_facts is undefined

- name: Refresh group facts
  include_role:
    name: nimble_group_facts
  vars:
    nimble_group_facts:
      volumes: "fields=name,target_name,id,serial_number&name={{ nimble_volume }}"
      subnets: "fields=allow_iscsi,discovery_ip"

- name: Discover Targets
  command: ncmadm -e {{ nimble_group_discovery_ip }}

- name: Get volume serial number
  set_fact:
    nimble_volume_serial_number: "{{ nimble_group_facts | json_query(local_query) }}"
  vars:
    local_query: "volumes[?name=='{{ nimble_volume }}'].serial_number | [0]"

- name: Create device string
  set_fact:
    nimble_volume_device_name: "{{ nimble_host_device_prefix }}/{{ nimble_volume }}-2{{ nimble_volume_serial_number }}"

- name: Wait for device to appear
  wait_for:
    path: "{{ nimble_volume_device_name }}"
    timeout: 30

- name: Create filesystem
  filesystem: 
    dev: "{{ nimble_volume_device_name }}"
    fstype: xfs
    opts: -L {{ nimble_volume }} {{ nimble_volume_mkfs_options }}
  register: nimble_filesystem_created

- name: Update label if this is an existing filesystem (clone)
  shell: xfs_admin -L {{ nimble_volume | quote }} -U {{ ansible_date_time.iso8601_micro | to_uuid }} {{ nimble_volume_device_name | quote }}
  when: nimble_filesystem_created.changed == False

- name: Mount volume
  mount:
    name: "{{ nimble_volume_mountpoint }}"
    state: mounted
    src: LABEL={{ nimble_volume }}
    opts: "{{ nimble_volume_mount_options }}"
    fstype: xfs
