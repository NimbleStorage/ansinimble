---
- name: Ensure play variables are sane
  fail:
    msg: "Missing variable {{ item }}"
  when: vars[item] is undefined
  with_items:
    - nimble_protection_schedule
    - nimble_protection_template_id
    - nimble_protection_schedule_name
    - nimble_group_facts
    - nimble_host_facts

- name: Merge options
  set_fact: 
    nimble_protsched_options_default: "{{ nimble_protsched_options_default | combine( { item.key: item.value } ) }}"
  with_dict: "{{ nimble_protection_schedule }}"

- set_fact:
    nimble_protsched_options_default: "{{ nimble_protsched_options_default | combine( { 'name': nimble_protection_schedule_name, 'volcoll_or_prottmpl_id': nimble_protection_template_id } ) }}"

- block: 
  - name: Get nimble_partner_id 
    set_fact: 
      nimble_partner_id: "{{ nimble_group_facts | json_query(local_query) }}" 
    vars: 
      local_query: "replication_partners[?name=='{{ nimble_protsched_options_default.downstream_partner_id }}'].id | [0]" 
  - set_fact: 
      nimble_protsched_options_default: "{{ nimble_protsched_options_default | combine( { 'downstream_partner_id': nimble_partner_id } ) }}" 
  when: nimble_protsched_options_default.downstream_partner_id is defined 

- name: Create protection schedule
  uri:
    url: "{{ nimble_group_url }}/protection_schedules"
    validate_certs: no
    method: POST
    status_code: 201,202
    body_format: json
    headers:
      X-Auth-Token: "{{ nimble_group_token }}"
    body:
      data: "{{ nimble_protsched_options_default }}"
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  register: nimble_protsched_created
  until: nimble_protsched_created | success
