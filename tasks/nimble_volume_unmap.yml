---
- name: Ensure play variables are sane
  fail:
    msg: "Missing variable {{ item }}"
  when: vars[item] is undefined
  with_items:
    - nimble_volume
    - nimble_host_name

- name: Refresh group facts
  include: nimble_group_facts.yml
  vars:
    nimble_group_facts:
      access_control_records: "fields=vol_name,initiator_group_name,id&vol_name={{ nimble_volume }}"
      volumes: "fields=name,id,serial_number,target_name&name={{ nimble_volume }}"
      initiator_groups: "fields=id&name={{ nimble_host_name }}"

- name: Determine ACR ID
  set_fact:
    nimble_volume_acr: "{{ nimble_group_facts | json_query(local_query) }}"
  vars:
    local_query: "access_control_records[?vol_name=='{{ nimble_volume }}' && initiator_group_name=='{{ nimble_host_name }}'].id | [0]"

- name: Remove Access Control Record
  uri:
    url: "{{ nimble_group_url }}/access_control_records/{{ nimble_volume_acr }}"
    validate_certs: no
    method: DELETE
    status_code: 200
    headers:
      X-Auth-Token: "{{ nimble_group_token }}"
  when: nimble_volume_acr is defined and nimble_volume_acr
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  register: nimble_acr_deleted
  until: nimble_acr_deleted | success

- include: nimble_util_volume_id.yml

- name: Offline nimble_volume
  uri:
    url: "{{ nimble_group_url }}/volumes/{{ nimble_volume_id }}?force=true"
    validate_certs: no
    method: PUT
    status_code: 200
    body_format: json
    body:
      data:
        id: "{{ nimble_volume_id }}"
        online: False
    headers:
      X-Auth-Token: "{{ nimble_group_token }}"
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  register: nimble_volume_offline
  until: nimble_volume_offline | success

- name: Refresh initiator_groups
  include: nimble_group_facts.yml
  vars:
    nimble_group_fact_refresh:
      initiator_groups: "fields=id,volume_count,name&name={{ nimble_host_name }}"

- name: Find previously initator_group ID
  set_fact:
    nimble_initiator_group_id: "{{ nimble_group_facts | json_query(local_query) }}"
  vars:
    local_query: "initiator_groups[?name=='{{ nimble_host_name }}'].id | [0]"

- name: Delete initiator group if no more volumes remain
  uri:
    url: "{{ nimble_group_url }}/initiator_groups/{{ nimble_initiator_group_id }}"
    validate_certs: no
    method: DELETE
    status_code: 200
    body_format: json
    headers:
      X-Auth-Token: "{{ nimble_group_token }}"
    return_content: yes
  register: nimble_initiator_group_deleted
  when: nimble_group_facts | json_query(local_query) == nimble_initiator_group_id
  vars:
    local_query: "initiator_groups[?id=='{{ nimble_initiator_group_id }}'].{v: volume_count, id: id}[?v==`0`]|[0].id"
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  until: nimble_initiator_group_deleted | success
