---
- name: Ensure nimble_group_password
  fail: msg="Missing variable nimble_group_password, please provide the group password in nimble_group_password"
  when: nimble_group_password is undefined

- block:
  - fail: msg="Need to collect host facts"
    when: nimble_host_facts is undefined and nimble_group_verified is undefined

  rescue:
  - name: Host facts
    include: nimble_host_facts.yml

- name: API token
  uri:
    url: "{{ nimble_group_url }}/tokens"
    validate_certs: no
    method: POST
    status_code: 201
    body_format: json
    body:
     data:
       username: "{{ nimble_host_facts.groups.main.user }}"
       password: "{{ nimble_group_password }}"
    return_content: yes
  no_log: "{{ nimble_silence_payload }}"
  register: nimble_group_token
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  until: nimble_group_token | success

- name: Store group token
  set_fact:
    nimble_group_token: "{{ nimble_group_token.json.data.session_token }}"

- name: Use defaults
  set_fact:
    nimble_group_objects: "{{ nimble_group_facts_default }}"
  when: nimble_group_facts is undefined

- name: Build group facts
  set_fact:
    nimble_group_objects: "{{ nimble_group_facts }}"
  when: nimble_group_fact_refresh is undefined

- name: Partial group facts refresh
  set_fact:
    nimble_group_objects: "{{ nimble_group_fact_refresh }}"
  when: nimble_group_fact_refresh is defined

- name: Append arrays detail
  set_fact:
    nimble_group_objects: "{{ nimble_group_objects | combine( { 'arrays': 'fields=version,name,serial' } ) }}"

- name: Retrieve group objects
  uri:
    url: "{{ nimble_group_url }}/{{ item.key }}/detail?{{ item.value | default('') }}"
    validate_certs: no
    method: GET
    status_code: 200
    body_format: json
    HEADER_X-Auth-Token: "{{ nimble_group_token }}"
    return_content: yes
  with_dict: "{{ nimble_group_objects }}"
  register: nimble_group_data
  no_log: "{{ nimble_silence_payload }}"
  retries: "{{ nimble_uri_retries }}"
  delay: "{{ nimble_uri_delay }}"
  until: nimble_group_data | success

- name: Combine group facts
  set_fact: 
    nimble_group_facts_local: "{{ nimble_group_facts_local | combine( { item.item.key: item.json.data } ) }}"
  with_items: "{{ nimble_group_data.results }}"
  no_log: "{{ nimble_silence_payload }}"

- name: Set group facts
  set_fact:
    nimble_group_facts: "{{ nimble_group_facts_local }}"
    nimble_group_version: "{{ nimble_group_facts_local.arrays.0.version }}"
