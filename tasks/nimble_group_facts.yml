---
- block: 
  - name: API token
    uri:
      url: "{{ nimble_group_url }}/tokens"
      validate_certs: no
      method: POST
      status_code: 201
      body_format: json
      body:
       data:
         username: "{{ nimble_group_options.username }}"
         password: "{{ nimble_group_password }}"
      return_content: yes
    no_log: "{{ nimble_silence_payload }}"
    register: nimble_group_token
    retries: "{{ nimble_uri_retries }}"
    delay: "{{ nimble_uri_delay }}"
    until: nimble_group_token | success
   
  - name: Store group token
    set_fact:
      nimble_group_token: "{{ nimble_group_token.json.data.session_token }}"
   
  - name: Use defaults
    set_fact:
      nimble_group_objects: "{{ nimble_group_facts_default }}"
    when: nimble_group_facts is undefined
   
  - name: Build group facts
    set_fact:
      nimble_group_objects: "{{ nimble_group_facts }}"
    when: nimble_group_fact_refresh is undefined and nimble_group_facts is defined
   
  - name: Partial group facts refresh
    set_fact:
      nimble_group_objects: "{{ nimble_group_fact_refresh }}"
    when: nimble_group_fact_refresh is defined
   
  - name: Grab entire arrays
    set_fact:
      nimble_group_objects: "{{ nimble_group_objects | combine( { 'arrays': '' } ) }}"
    when: nimble_group_objects.arrays is defined 
   
  - name: Append arrays detail
    set_fact:
      nimble_group_objects: "{{ nimble_group_objects | combine( { 'arrays': 'fields=version,name,serial' } ) }}"
    when: nimble_group_objects.arrays is undefined 
   
  - name: Retrieve group objects
    uri:
      url: "{{ nimble_group_url }}/{{ item.key }}/detail?{{ item.value | default('') }}"
      validate_certs: no
      method: GET
      status_code: 200
      body_format: json
      headers:
        X-Auth-Token: "{{ nimble_group_token }}"
      return_content: yes
    with_dict: "{{ nimble_group_objects }}"
    register: nimble_group_data
    no_log: "{{ nimble_silence_payload }}"
    retries: "{{ nimble_uri_retries }}"
    delay: "{{ nimble_uri_delay }}"
    until: nimble_group_data | success
   
  - name: Combine group facts
    set_fact: 
      nimble_group_facts_local: "{{ nimble_group_facts_local | combine( { item.item.key: item.json.data } ) }}"
    with_items: "{{ nimble_group_data.results }}"
    no_log: "{{ nimble_silence_payload }}"
   
  - name: Set group facts
    set_fact:
      nimble_group_facts: "{{ nimble_group_facts_local }}"
      nimble_group_version: "{{ nimble_group_facts_local.arrays.0.version }}"
  delegate_to: 127.0.0.1
  delegate_facts: False
  connection: local
